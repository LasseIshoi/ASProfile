data <-  lapply(list_files, read_csv)
print(data)
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
import_data <- function(file_directory) {
list_files <-  list.files(file_directory, pattern = "*.csv")
data <-  lapply(list_files, read_csv)
print(data)
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
list_files <-  list.files("C:/Users/lasse/OneDrive/Skrivebord/gps", pattern = "*.csv")
data <-  lapply(list_files, read_csv)
data <-  lapply(list_files, read_csv, path = "C:/Users/lasse/OneDrive/Skrivebord/gps")
data <-  lapply(list_files, read_csv, path = "C:/Users/lasse/OneDrive/Skrivebord/gps/")
data <-  lapply(list_files, read_csv (path = "C:/Users/lasse/OneDrive/Skrivebord/gps/"))
data <-  lapply(list_files, read_csv, path = "C:/Users/lasse/OneDrive/Skrivebord/gps/")
list_files <-  list.files("C:/Users/lasse/OneDrive/Skrivebord/gps", pattern = "*.csv", full.names = TRUE)
data <-  lapply(list_files, read_csv)
View(data)
View(data[[1]])
import_data <- function(file_directory) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <-  lapply(list_files, read_csv)
print(data)
}
import_data <- function(file_directory) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <-  lapply(list_files, read_csv)
print(data)
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
import_data <- function(file_directory) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
lapply(list_files, read_csv)
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
import_data <- function(file_directory) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <- lapply(list_files, read_csv)
.GlobalEnv$data <- data
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
import_data <- function(file_directory) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <- lapply(list_files, read_csv)
.GlobalEnv$data <- data
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
View(data)
View(data)
library(dplyr)
library(plyr)
import_data <- function(file_directory) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <- ldply(list_files, read_csv)
.GlobalEnv$data <- data
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
InSituASProfile::import_data("C:/Users/lasse/OneDrive/Skrivebord/gps")
InSituASProfile::prepare_data(data)
InSituASProfile::ASProfile()
colnames(data, "acc" = "lasse")
colnames(data, acc = lasse)
colnames(data, c("acc" = "lasse"))
colnames(data, c("lasse" = "acc"))
data <- plyr::rename(data, lasse = acc)
data <- plyr::rename(data, lasse = Acceleraion)
data_1 <- plyr::rename(data, lasse = Acceleraion)
data_1 <- dplyr::rename(data, lasse = Acceleraion)
data_1 <- dplyr::rename(data, lasse = Acceleration)
data_1 <- plyr::rename(data, lasse = Acceleration)
data_1 <- plyr::rename(data, lasse = Acceleration)
import_data <- function(file_directory, velocity, Acceleraion) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <- ldply(list_files, read_csv)
data <- dplyr::rename(data, speed = velocity)
.GlobalEnv$data <- data
}
import_data <- function(file_directory, velocity) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <- ldply(list_files, read_csv)
data <- dplyr::rename(data, speed = velocity)
.GlobalEnv$data <- data
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps", Velocity)
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps", "Velocity")
devtools::install_github("LasseIshoi/ASProfile")
library(InsituASProfile)
devtools::install_github("LasseIshoi/ASProfile")
force = TRUE
`force = TRUE`
devtools::install_github("LasseIshoi/ASProfile")
library(InSituASProfile)
InSituASProfile::
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
devtools::build_readme()
devtools::build_readme()
InSituASProfile::import_data("C:/Users/lasse/OneDrive/Skrivebord/7")
InSituASProfile::import_data("C:/Users/lasse/OneDrive/Skrivebord/7.csv")
InSituASProfile::import_data("C:/Users/lasse/OneDrive/Skrivebord/7")
View(data_import)
use_data(data_import, pkg = "InSituASProfile", overwrite = TRUE)
InSituASProfile::
library(devtools)
sample_data <- data_import
use_data(sample_data, pkg = "InSituASProfile", overwrite = TRUE)
use_data(sample_data, pkg = "InSituASProfile")
View(sample_data)
use_data(sample_data)
devtools::build_readme()
library(InSituASProfile)
# Import data (csv files) from folder and combine in single data frame for analysis.
InSituASProfile::import_data("C:/Users/lasse/OneDrive/skrivebord/gps", Velocity, Acceleration)
# Prepare data. This step cleans the data frame by 1) omitting all acceleration
#values below 0, 2) identify the two highest acceleration values for every
#consecutive 0.2 m/s cut starting from 3 m/s, and 3) create an initial
#regression line and associated preliminary plot (if not FALSE)
InSituASProfile::prepare_data(data, print_plot = TRUE)
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
InSituASProfile::import_data("C:/Users/lasse/OneDrive/Skrivebord/gps_data")
prepare_data(data_import)
InSituASProfile::get_AS_Profile()
devtools::build_readme()
devtools::build_readme()
use_vignette("InSitu AS Profile")
use_vignette("InSituASProfile")
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
devtools::build_readme()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_pkgdown()
pkgdown::build_site()
devtools::build_readme()
devtools::build_readme()
pkgdown::build_site()
devtools::build_readme()
use_vignette("InSituASProfile")
use_vignette("InSituASProfile")
devtools::build_readme()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
devtools::build_readme()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
use_data(AS_data)
use_data(as_insitu_initial_lm)
pkgdown::build_site()
devtools::build_readme()
install.packages("blogdown")
where_git
where git
devtools::install_github("LasseIshoi/InSituASProfile")
pkgdown::build_favicons()
pkgdown::build_home()
pkgdown::build_site()
pkgdown::build_site()
?count
get_AS_Profile <- function(print_plot_regression_line = FALSE, print_AS_plot = TRUE) {
lm_initial <- lm(acc ~ speed, as_insitu_initial_lm)
summary_lm_initial <- summary(lm_initial)
.GlobalEnv$summary_lm_initial <- summary_lm_initial
predicted_values <- predict.lm(lm_initial, newdata = as_insitu_initial_lm, interval = "confidence", level = 0.95)
predicted_values_df <- as.data.frame( predicted_values)
as_insitu_initial_lm_predicted <- cbind(as_insitu_initial_lm, predicted_values_df)
as_insitu_clean <- as_insitu_initial_lm_predicted  %>%
dplyr::filter(acc <= upr)
.GlobalEnv$as_insitu_clean <- as_insitu_clean
lm_as_insitu_fit <- lm(acc ~ speed, as_insitu_clean)
summary_as <- summary(lm_as_insitu_fit)
.GlobalEnv$summary_as <- summary_as
r.square <- summary_as[[8]]
a0 <- coef(lm_as_insitu_fit)[[1]]
slope <- coef(lm_as_insitu_fit)[[2]]
vmax <- a0/abs(slope)
.GlobalEnv$r.square <- round(r.square,3)
.GlobalEnv$a0 <-  round(a0,2)
.GlobalEnv$vmax <- round(vmax,2)
reduced_data <- AS_data[-sample(1:nrow(AS_data), (nrow(AS_data)*0.90)), ]
x_limit <- vmax + 0.5
y_lim <- a0 + 1
if(print_plot_regression_line) {
as_plot_regression <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_smooth(data = as_insitu_clean, aes(speed, acc), method="lm") +
ggeasy::easy_remove_legend() +
ggpubr::theme_pubr() +
ggplot2::ggtitle("In-situ Acceleraion speed profile (regression line)") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE)
.GlobalEnv$as_plot_regression <- as_plot_regression
}
if(print_AS_plot){
as_plot_publish <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_abline(intercept = a0, slope = slope, color = "blue", size = 2) +
ggpubr::theme_pubr() +
ggeasy::easy_remove_legend() +
ggplot2::ggtitle("In-situ Acceleration Speed Profile") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE) +
geom_label(x = vmax - 4.6, y = a0 - 0.6, hjust = 0, aes(label=paste0("Max acceleration:", " ", round(a0,2), " m/s^2", "\n", "\n", "Max velocity:", " ", round(vmax,2), " m/s", "\n", "\n", "Fit (r-sqaured):", " ", round(r.square,4))))
.GlobalEnv$as_plot_publish <- as_plot_publish
print(as_plot_publish)
}
Maximal.Acceleration <- c(round(a0,2))
Maximal.Velocity <- c(round(vmax,2))
R.Squared <- c(round(r.square,3))
Number.Observations <- c(count(as_insitu_clean))
Data_summary <- data.frame(Maximal.Acceleration, Maximal.Velocity, R.Sqaured, Number.Observations)
.GlobalEnv$Data_summary  <- Data_summary
}
prepare_data <- function(x, print_plot = TRUE) {
AS_data <- x %>% dplyr::filter(acc >= 0)
gps_data_filtered <- x %>% dplyr::filter(speed > 3)
gps_data_filtered$cuts <- cut(gps_data_filtered$speed,
seq(3.00, max(gps_data_filtered$speed, na.rm = FALSE),
by = 0.2))
as_insitu_initial_lm <- gps_data_filtered %>%
arrange(desc(acc)) %>%
group_by(cuts) %>%
slice(1:2)
as_insitu_initial_lm_df <- as.data.frame(as_insitu_initial_lm)
.GlobalEnv$as_insitu_initial_lm <- as_insitu_initial_lm_df
if(print_plot) {
reduced_data_prepare <- AS_data[-sample(1:nrow(AS_data), (nrow(AS_data)*0.95)), ]
as_plot_initial <- ggplot() +
geom_point(reduced_data_prepare, mapping = aes(speed, acc), alpha = 0.1, size = 0.5) +
geom_point(as_insitu_initial_lm_df, mapping = aes(speed, acc, color = "red1"), size = 3) +
geom_smooth(data = as_insitu_initial_lm_df, aes(speed, acc), method="lm") +
ggpubr::theme_pubr() +
ggeasy::easy_remove_legend() +
coord_cartesian(expand = FALSE) +
ggplot2::ggtitle("Preliminary AS profile before removing observations outside the 95% CI of \n the regression line")
ylim(0, NA)
.GlobalEnv$as_plot_initial <- as_plot_initial
print(as_plot_initial)
}
.GlobalEnv$AS_data <- AS_data
}
import_data <- function(file_directory, Velocity, Acceleration) {
list_files <-  list.files(file_directory, pattern = "*.csv", full.names = TRUE)
data <- lapply(list_files, read_csv) %>% dplyr::bind_rows()
data_import <- dplyr::rename(data, speed = Velocity,
acc = Acceleration)
.GlobalEnv$data_import <- data_import
}
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps_data")
library(dplyr)
prepare_data(data_import)
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps_data")
library(readr)
import_data("C:/Users/lasse/OneDrive/Skrivebord/gps_data")
library(tidyverse)
prepare_data(data_import)
get_AS_Profile()
get_AS_Profile <- function(print_plot_regression_line = FALSE, print_AS_plot = TRUE) {
lm_initial <- lm(acc ~ speed, as_insitu_initial_lm)
summary_lm_initial <- summary(lm_initial)
.GlobalEnv$summary_lm_initial <- summary_lm_initial
predicted_values <- predict.lm(lm_initial, newdata = as_insitu_initial_lm, interval = "confidence", level = 0.95)
predicted_values_df <- as.data.frame( predicted_values)
as_insitu_initial_lm_predicted <- cbind(as_insitu_initial_lm, predicted_values_df)
as_insitu_clean <- as_insitu_initial_lm_predicted  %>%
dplyr::filter(acc <= upr)
.GlobalEnv$as_insitu_clean <- as_insitu_clean
lm_as_insitu_fit <- lm(acc ~ speed, as_insitu_clean)
summary_as <- summary(lm_as_insitu_fit)
.GlobalEnv$summary_as <- summary_as
r.square <- summary_as[[8]]
a0 <- coef(lm_as_insitu_fit)[[1]]
slope <- coef(lm_as_insitu_fit)[[2]]
vmax <- a0/abs(slope)
.GlobalEnv$r.square <- round(r.square,3)
.GlobalEnv$a0 <-  round(a0,2)
.GlobalEnv$vmax <- round(vmax,2)
reduced_data <- AS_data[-sample(1:nrow(AS_data), (nrow(AS_data)*0.90)), ]
x_limit <- vmax + 0.5
y_lim <- a0 + 1
if(print_plot_regression_line) {
as_plot_regression <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_smooth(data = as_insitu_clean, aes(speed, acc), method="lm") +
ggeasy::easy_remove_legend() +
ggpubr::theme_pubr() +
ggplot2::ggtitle("In-situ Acceleraion speed profile (regression line)") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE)
.GlobalEnv$as_plot_regression <- as_plot_regression
}
if(print_AS_plot){
as_plot_publish <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_abline(intercept = a0, slope = slope, color = "blue", size = 2) +
ggpubr::theme_pubr() +
ggeasy::easy_remove_legend() +
ggplot2::ggtitle("In-situ Acceleration Speed Profile") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE) +
geom_label(x = vmax - 4.6, y = a0 - 0.6, hjust = 0, aes(label=paste0("Max acceleration:", " ", round(a0,2), " m/s^2", "\n", "\n", "Max velocity:", " ", round(vmax,2), " m/s", "\n", "\n", "Fit (r-sqaured):", " ", round(r.square,4))))
.GlobalEnv$as_plot_publish <- as_plot_publish
print(as_plot_publish)
}
Maximal.Acceleration <- c(round(a0,2))
Maximal.Velocity <- c(round(vmax,2))
R.Squared <- c(round(r.square,3))
Number.Observations <- c(count(as_insitu_clean))
Data_summary <- data.frame(Maximal.Acceleration, Maximal.Velocity, R.Squared, Number.Observations)
.GlobalEnv$Data_summary  <- Data_summary
}
get_AS_Profile()
View(summary_as)
View(Data_summary)
get_AS_Profile <- function(print_plot_regression_line = FALSE, print_AS_plot = TRUE) {
lm_initial <- lm(acc ~ speed, as_insitu_initial_lm)
summary_lm_initial <- summary(lm_initial)
.GlobalEnv$summary_lm_initial <- summary_lm_initial
predicted_values <- predict.lm(lm_initial, newdata = as_insitu_initial_lm, interval = "confidence", level = 0.95)
predicted_values_df <- as.data.frame( predicted_values)
as_insitu_initial_lm_predicted <- cbind(as_insitu_initial_lm, predicted_values_df)
as_insitu_clean <- as_insitu_initial_lm_predicted  %>%
dplyr::filter(acc <= upr)
.GlobalEnv$as_insitu_clean <- as_insitu_clean
lm_as_insitu_fit <- lm(acc ~ speed, as_insitu_clean)
summary_as <- summary(lm_as_insitu_fit)
.GlobalEnv$summary_as <- summary_as
r.square <- summary_as[[8]]
a0 <- coef(lm_as_insitu_fit)[[1]]
slope <- coef(lm_as_insitu_fit)[[2]]
vmax <- a0/abs(slope)
.GlobalEnv$r.square <- round(r.square,3)
.GlobalEnv$a0 <-  round(a0,2)
.GlobalEnv$vmax <- round(vmax,2)
reduced_data <- AS_data[-sample(1:nrow(AS_data), (nrow(AS_data)*0.90)), ]
x_limit <- vmax + 0.5
y_lim <- a0 + 1
if(print_plot_regression_line) {
as_plot_regression <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_smooth(data = as_insitu_clean, aes(speed, acc), method="lm") +
ggeasy::easy_remove_legend() +
ggpubr::theme_pubr() +
ggplot2::ggtitle("In-situ Acceleraion speed profile (regression line)") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE)
.GlobalEnv$as_plot_regression <- as_plot_regression
}
if(print_AS_plot){
as_plot_publish <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_abline(intercept = a0, slope = slope, color = "blue", size = 2) +
ggpubr::theme_pubr() +
ggeasy::easy_remove_legend() +
ggplot2::ggtitle("In-situ Acceleration Speed Profile") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE) +
geom_label(x = vmax - 4.6, y = a0 - 0.6, hjust = 0, aes(label=paste0("Max acceleration:", " ", round(a0,2), " m/s^2", "\n", "\n", "Max velocity:", " ", round(vmax,2), " m/s", "\n", "\n", "Fit (r-sqaured):", " ", round(r.square,4))))
.GlobalEnv$as_plot_publish <- as_plot_publish
print(as_plot_publish)
}
Maximal.Acceleration <- c(round(a0,2))
Maximal.Velocity <- c(round(vmax,2))
R.Squared <- c(round(r.square,3))
Number.Observations <- count(as_insitu_clean)
Data_summary <- data.frame(Maximal.Acceleration, Maximal.Velocity, R.Squared, Number.Observations)
.GlobalEnv$Data_summary  <- Data_summary
}
get_AS_Profile()
View(Data_summary)
library(InSituASProfile)
InSituASProfile::prepare_data(sample_data)
InSituASProfile::get_AS_Profile()
View(as_insitu_clean)
View(AS_data)
View(as_insitu_clean)
data <- InSituASProfile::sample_data
View(data)
data_selected <- InSituASProfile::sample_data
x <- InSituASProfile::sample_data
data_selected <- x %>% dplyr::select(speed, acc)
library(tidyverse)
data_selected <- x %>% dplyr::select(speed, acc)
AS_data <- data_selected %>% dplyr::filter(acc >= 0)
gps_data_filtered <- AS_data %>% dplyr::filter(speed > 3)
gps_data_filtered$cuts <- cut(gps_data_filtered$speed,
seq(3.00, max(gps_data_filtered$speed, na.rm = FALSE),
by = 0.2))
as_insitu_initial_lm <- gps_data_filtered %>%
arrange(desc(acc)) %>%
group_by(cuts) %>%
top_n(2, acc)
as_insitu_initial_lm_df <- as.data.frame(as_insitu_initial_lm)
lm_initial <- lm(acc ~ speed, as_insitu_initial_lm)
summary_lm_initial <- summary(lm_initial)
predicted_values <- predict.lm(lm_initial, newdata = as_insitu_initial_lm, interval = "confidence", level = 0.95)
as_insitu_initial_lm_predicted <- cbind(as_insitu_initial_lm, predicted_values_df)
predicted_values_df <- as.data.frame( predicted_values)
as_insitu_initial_lm_predicted <- cbind(as_insitu_initial_lm, predicted_values_df)
View(as_insitu_initial_lm_predicted)
as_insitu_clean <- as_insitu_initial_lm_predicted  %>%
dplyr::filter(acc <= upr & acc >= lwr)
View(as_insitu_clean)
lm_as_insitu_fit <- lm(acc ~ speed, as_insitu_clean)
summary_as <- summary(lm_as_insitu_fit)
.GlobalEnv$summary_as <- summary_as
r.square <- summary_as[[8]]
a0 <- coef(lm_as_insitu_fit)[[1]]
slope <- coef(lm_as_insitu_fit)[[2]]
vmax <- a0/abs(slope)
reduced_data <- AS_data[-sample(1:nrow(AS_data), (nrow(AS_data)*0.90)), ]
x_limit <- vmax + 0.5
y_lim <- a0 + 1
if(print_plot_regression_line) {
as_plot_regression <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_smooth(data = as_insitu_clean, aes(speed, acc), method="lm") +
ggeasy::easy_remove_legend() +
ggpubr::theme_pubr() +
ggplot2::ggtitle("In-situ Acceleraion speed profile (regression line)") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE)
.GlobalEnv$as_plot_regression <- as_plot_regression
}
if(print_AS_plot){
as_plot_publish <- ggplot() +
geom_point(data = reduced_data, aes(speed, acc), color = "slategray4", alpha = 0.3, size = 0.5) +
geom_point(data = as_insitu_clean, aes(speed, acc), color = "red", size = 3) +
geom_abline(intercept = a0, slope = slope, color = "blue", size = 2) +
ggpubr::theme_pubr() +
ggeasy::easy_remove_legend() +
ggplot2::ggtitle("In-situ Acceleration Speed Profile") +
ylim(0, y_lim) +
xlim(0, x_limit) +
ylab(bquote("Acceleration in m/s"^2)) +
xlab("Sprinting velocity in m/s") +
coord_cartesian(expand = FALSE) +
geom_label(x = vmax - 4.6, y = a0 - 0.6, hjust = 0, aes(label=paste0("Max acceleration:", " ", round(a0,2), " m/s^2", "\n", "\n", "Max velocity:", " ", round(vmax,2), " m/s", "\n", "\n", "Fit (r-sqaured):", " ", round(r.square,4))))
.GlobalEnv$as_plot_publish <- as_plot_publish
print(as_plot_publish)
}
Maximal.Acceleration <- c(round(a0,2))
Maximal.Velocity <- c(round(vmax,2))
R.Squared <- c(round(r.square,3))
Number.Observations <- c(count(as_insitu_clean))
Data_summary <- data.frame(Maximal.Acceleration, Maximal.Velocity, R.Squared, Number.Observations) %>%
rename(Number.Observations = n)
View(Data_summary)
library(InSituASProfile)
load("~/R/Packages/ASProfile/data/sample_data.rda")
library(InSituASProfile)
library(here)
library(tidyverse)
write_csv(sample_data, file = "C:/Users/lasse/OneDrive/Skrivebord/data.csv")
library(here)
InSituASProfile::import_data(here("/data/data.csv"), speed, acc)
library(here)
InSituASProfile::import_data(here("./data/"), speed, acc)
library(here)
InSituASProfile::import_data(here("/data/"), speed, acc)
library(here)
InSituASProfile::import_data(here("/data/"), "speed", "acc")
library(here)
InSituASProfile::import_data(here("./data/"), "speed", "acc")
usethis::use_pkgdown()
pkgdown::build_site()
devtools::build_readme()
devtools::build_readme()
use_logo("C:/Users/lasse/OneDrive/Skrivebord/InSituASProfile.png")
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
library(InSituASProfile)
devtools::build_readme()
devtools::build_readme()
pkgdown::build_site()
